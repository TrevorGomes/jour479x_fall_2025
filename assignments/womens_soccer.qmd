---
title: "Women's Soccer Data"
---

We'll use this notebook to explore some NCAA women's soccer data and [our questions](https://docs.google.com/spreadsheets/d/1G1AjH2iS6kj3kKHCRi0XVy5Lcm-rahJkeTAToVh9J1g/edit?gid=0#gid=0). First, let's load the tidyverse library:

```{r}
library(tidyverse)
```

We'll want to start with 2025 match data, which is located in [this GitHub repository](https://github.com/dwillis/NCAAWomensSoccerData). We can load the match data directly from GitHub using `read_csv`:


```{r}
matches_2025 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2025.csv") |> mutate(diff = team_score - opponent_score, total_goals =  goals + defensive_goals)
```

Let's take a look at this data to see what it contains, using `head` and `glimpse`:

```{r}
head(matches_2025)
glimpse(matches_2025)
```

Now, onto the questions using aggregates, which means `group_by` and `summarize`:

1. How many shots in total has Maryland attempted and how many have been on goal? Calculate a percentage of shots on goal.

```{r}
matches_2025 |> 
  group_by(team) |> 
  summarise(
    total_shots = sum(sh_att),
    total_sog = sum(so_g),
    pct_sog = total_sog/total_shots
  ) |> 
arrange(desc(pct_sog))
```

2. What about the same shot stats from last season's first four games? You'll need to load the matches from 2024 - just change the season in the URL - and filter by date to find the first four games.

```{r}
matches_2024 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2024.csv") |> mutate(total_goals = goals + defensive_goals) |> filter(date < '2024-09-18') |> filter(team == 'Maryland Terrapins, Terps')
```

```{r}
t.test(matches_2024$total_goals, matches_2025$total_goals)
```

Based on this t-test, I would accept the null hypothesis because the p-value is far above 0.05, meaning the results are not statistically significant. The mean goals scored in games through September 18th in 2024 was 2.92, compared to 2.9 this year, a negligible difference. 


```{r}
matches_2024 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2024.csv") |> mutate(total_goals = goals + defensive_goals) |> filter(date < '2024-09-18') |> filter(team == 'Maryland Terrapins, Terps')
```

```{r}
matches_2025 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2025.csv") |> mutate(total_goals = goals + defensive_goals) |> filter(team == 'Maryland Terrapins, Terps')
```

```{r}
t.test(matches_2024$total_goals, matches_2025$total_goals)
```

The t-test yields similar results for only Maryland games. The p-value is considerably higher than 0.05, and the mean goals scored last year compared to this year are not significantly far apart.

```{r}
firstfourgames <- c("2024-08-15", "2024-08-18", "2024-08-22", "2024-08-25")

matches_2024 |> 
  filter(team == "Maryland Terrapins, Terps") |> 
  filter(date %in% firstfourgames) |> 
  group_by(team) |> 
  summarise(
    total_shots = sum(sh_att),
    total_sog = sum(so_g),
    pct_sog = total_sog/total_shots
  )

```



3. Maryland started 2022 with 4 draws. Have any other teams had as many this season?

```{r}
matches_2025 |> 
  group_by(team) |> 
  summarise(
    total_draws = sum(outcome == "Draw")
  ) |> 
arrange(desc(total_draws))
  
```


4. How many total corner kicks has Maryland had so far this season and how many have its opponents have? Calculate the difference between the two totals for every team using group_by, summarize and mutate, then filter to find Maryland's totals.

```{r}
matches_2025 |> 
  group_by(team) |>
  mutate(corners_diff = corners - defensive_corners) |> 
  summarise(total_corners_diff = sum(corners_diff)
              ) |> 
filter(team == "Maryland Terrapins, Terps")
```

```{r}
swac_teams <- c("Alabama A&M Bulldogs", "Alabama St. Lady Hornets", "Alcorn Lady Braves", "Ark.-Pine Bluff Lady Lions", "Grambling Lady Tigers", "Jackson St. Lady Tigers", "Mississippi Val. Devilettes", "Prairie View Lady Panthers", "Southern U. Lady Jaguars", "Texas Southern Lady Tigers")

swac_matches <- matches_2025 |> 
  filter(team %in% swac_teams)

matches_2025 |> 
  summarise(
    mean_diff = mean(diff),
    mean_opp_goals = mean(defensive_goals),
    mean_sog = mean(so_g),
    mean_opp_sog = mean(defensive_so_g)
    )

swac_matches |> 
  summarise(
    mean_diff = mean(diff),
    mean_opp_goals = mean(defensive_goals),
    mean_sog = mean(so_g),
    mean_opp_sog = mean(defensive_so_g)
    )

big10 <- c("Nebraska Huskers", "Iowa Hawkeyes", "Minnesota Golden Gophers", "Illinois Fighting Illini", "Northwestern Wildcats", "Wisconsin Badgers", "Indiana Hoosiers", "Purdue Boilermakers", "Ohio St. Buckeyes", "Michigan Wolverines", "Michigan St. Spartans", "Penn St. Nittany Lions", "Rutgers Scarlet Knights", "Maryland Terrapins, Terps", "Southern California Trojans", "UCLA Bruins", "Washington Huskies", "Oregon Ducks")

big10_matches <- matches_2025 |> 
  filter(team %in% big10)

big10_matches |> 
  summarise(
    mean_diff = mean(diff),
    mean_opp_goals = mean(defensive_goals),
    mean_sog = mean(so_g),
    mean_opp_sog = mean(defensive_so_g)
    )


big10_matches |> 
  filter(team == "Maryland Terrapins, Terps") |> 
  summarise(
    mean_diff = mean(diff),
    mean_opp_goals = mean(defensive_goals),
    mean_sog = mean(so_g),
    mean_opp_sog = mean(defensive_so_g)
    )
```


5. What's the most interesting thing you've seen from these questions?

The most newsworthy statistic I've noticed from these questions is the considerable disparity in shot attempts, shots on goal, and shots on goal percentage for Maryland women's soccer over the first four games of the 2024 season compared to the 2025 season. They've attempted more than double the shots and tallied over twice as many shots on goal this season than they did in 2024. Their shots on goal percentage also increased by two points. 

This could be strong and engaging statistical evidence in a story about the overall difference between the team last year compared to this year. Or, it could illustrate how much more effective the offense has been in head coach Michael Marchiano's first year leading the program.


## Correlations and regression

```{r}
correlations <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2024.csv")


newcorrelations <- correlations |> 
  mutate(
    differential = goals - defensive_goals
    )

newcorrelations |> summarise(correlation = cor(differential, fouls, method="pearson"))

newcorrelations |> summarise(correlation = cor(differential, yellow_cards, method="pearson"))

fit <- lm(differential ~ fouls, data = newcorrelations)
summary(fit)

newcorrelations |> 
  summarise(correlation = cor(differential, so_g, method="pearson"))


net <- lm(differential ~ so_g, data = newcorrelations)
summary(net)

```

## 2025 version

```{r}
correlations_2025 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2025.csv")

new_correlations_2025 <- correlations_2025 |> mutate(
  differential = goals - defensive_goals
)

new_correlations_2025 |> summarise(correlation = cor(differential, corners, method="pearson"))

net <- lm(differential ~ corners, data = new_correlations_2025)
summary(net)

umd_corner_correlations_2025 <- new_correlations_2025 |> mutate(
  corner_diff = corners - defensive_corners
) |> filter(team == "Maryland Terrapins, Terps")


umd_corner_correlations_2025 |> mutate(
  corner_diff_total = sum(corner_diff),
  differential_total = sum(differential)
) |> filter(team == "Maryland Terrapins, Terps")

```

## Story Pitch

The outcomes of Maryland women's soccer games have been closely tied to the number of corner kicks they earn and concede to their opponent. The Terps have recorded more corners than their opponents in five of their six wins, while their opponent took more corners than them in all four of their losses. 

Maryland's matches against Saint Francis and Florida are particularly telling. The Gators earned six more corners than Maryland in a decisive win over the Terps. In a 5-0 shellacking of Saint Francis, Maryland recorded six more corners than the Red Flash.

This is supported by a moderately positive correlation between the number of corners a team earns and allows, and the number of goals that team scores and concedes.

## Residuals

```{r}
diff_model <- lm(differential ~ so_g + defensive_so_g + fouls + defensive_fouls, data = new_correlations_2025)
summary(diff_model)
```

I chose shots on goal, defensive shots on goal, fouls, and defensive fouls because I feel these are accurate indicators of how effective a team's offense and defense was in a match. Shots on goal and defensive shots on goal especially represent the effectiveness of a team on both sides of the ball, because they directly indicate how many scoring opportunities a team earned and conceded. The number of fouls a team commits shows how "clean" the team's defense is, while defensive fouls shows how disciplined the opposing team's defense is.

The maximum (6.9841) and minimum residual (-7.0618) values are quite large, but the median residual value of -.0032 is fairly close to zero. This indicates that the model is generally accurate in predicting most games. The adjusted R-squared value of .5749 is considerable, but not extremely high.

```{r}
new_correlations_2025 <- new_correlations_2025 |> mutate(predicted = predict(diff_model), residuals = residuals(diff_model))

new_correlations_2025 |> top_n(10, wt=residuals) |> arrange(desc(residuals))
```

```{r}
new_correlations_2025 |> filter(residuals < 0) |> top_n(-10, wt=residuals) |> arrange(residuals)
```

A detail about these games that I immediately notice is the number of non-Power Five teams involved. There are only a handful of power conference teams in the top and bottom- 10residuals games. Most of the top-10 residuals games see the winning teams attempt double-digit shots on goal, though, even with that, the model is predicting that those teams would win by a far smaller margin than they actually did. This would likely suggest that these teams are converting their shots on goal at a much higher rate than average.

```{r}
new_correlations_2025 |> filter(team == "Maryland Terrapins, Terps") |> arrange(desc(residuals))
```

Maryland's biggest underperformances came when they allowed single-digit shots on goal, but still lost by a significant margin. In both the Penn State and USC games, Maryland allowed a relatively low number of shots on goal proportionate to the total shot attempts they surrendered. This may suggest that when the opposing teams did manage shots on goal, they were open looks or accurate shots, because they converted them at a high rate. Maryland also only notched one shot on goal in each of these games. The Terps' biggest overperformances came in their wins over Indiana and Purdue. In these games, Maryland committed only slightly fewer fouls than the opposing team and were outshot or tied in shots on goal. I was surprised at the fact that shots on goal and opposing shots on goal didn't account for a higher percentage of goal differential. This leads me to my story idea. The angle I'd suggest, both for Maryland and in general, is that shots on goal is not the most important stat. Rather, the type of shots on goal, considering accuracy, power, and goalkeeper reaction, is likely more telling.

## Z-Scores

```{r}
teamquality <- matches_2025 |> 
  mutate(sog_pct = so_g/sh_att, def_sog_pct = defensive_so_g/defensive_sh_att) |> 
  filter(!is.na(sog_pct), !is.na(def_sog_pct)) |> 
  group_by(team) |> 
  summarise(
    avg_goals = mean(goals),
    avg_def_goals = mean(defensive_goals),
    avg_sog_pct = mean(sog_pct),
    avg_def_sog_pct = mean(def_sog_pct),
    avg_assists = mean(assists),
    avg_def_assists = mean(defensive_assists)
  )

 teamzscore <- teamquality |> 
  mutate(
    goalsZscore = as.numeric(scale(avg_goals, center = TRUE, scale = TRUE)),
    defgoalsZscore = as.numeric(scale(avg_def_goals, center = TRUE, scale = TRUE)) * -1,
    sogpctZscore = as.numeric(scale(avg_sog_pct, center = TRUE, scale = TRUE)),
    defsogpctZscore = as.numeric(scale(avg_def_sog_pct, center = TRUE, scale = TRUE)) * -1,
    assistsZscore = as.numeric(scale(avg_assists, center = TRUE, scale = TRUE)),
    defassistsZscore = as.numeric(scale(avg_def_assists, center = TRUE, scale = TRUE)) * -1,
    TotalZscore = goalsZscore + defgoalsZscore + sogpctZscore + defsogpctZscore + assistsZscore + defassistsZscore
  ) 
```

